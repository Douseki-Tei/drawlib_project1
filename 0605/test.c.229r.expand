
;; Function main (main, funcdef_no=0, decl_uid=1854, cgraph_uid=0, symbol_order=0)

main ()
{
  int D.1858;
  long int _1;
  long int _2;
  int _3;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  dl_initialize (1.0e+0);
  _1 = dl_color_from_name ("red");
  dl_line (10, 10, 100, 100, _1, 5);
  _2 = dl_color_from_name ("blue");
  _3 = (int) _2;
  dl_circle (10, 10, 100, 100, _3, 5);
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                3
  dl_wait (9.99999977648258209228515625e-3);
  goto <bb 3>; [0.00%]
;;    succ:       3

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 12 (_12(D) - 12 )


Partition map 

Partition 0 (_12(D) - 12 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_12(D) - 12 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_12(D) - 12 )

main ()
{
  int D.1858;
  long int _1;
  long int _2;
  int _3;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  dl_initialize (1.0e+0);
  _1 = dl_color_from_name ("red");
  dl_line (10, 10, 100, 100, _1, 5);
  _2 = dl_color_from_name ("blue");
  _3 = (int) _2;
  dl_circle (10, 10, 100, 100, _3, 5);
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                3
  dl_wait (9.99999977648258209228515625e-3);
  goto <bb 3>; [0.00%]
;;    succ:       3

}



;; Generating RTL for gimple basic block 2

;; dl_initialize (1.0e+0);

(insn 5 4 6 (set (reg:DF 91)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [1  S8 A64])) "test.c":4 -1
     (expr_list:REG_EQUAL (const_double:DF 1.0e+0 [0x0.8p+1])
        (nil)))

(insn 6 5 7 (set (reg:DF 21 xmm0)
        (reg:DF 91)) "test.c":4 -1
     (nil))

(call_insn 7 6 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dl_initialize") [flags 0x41]  <function_decl 0x7fed223f2e00 dl_initialize>) [0 dl_initialize S1 A8])
            (const_int 0 [0]))) "test.c":4 -1
     (nil)
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))

;; _1 = dl_color_from_name ("red");

(insn 8 7 9 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fed224211b0 *.LC1>)) "test.c":6 -1
     (nil))

(call_insn 9 8 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dl_color_from_name") [flags 0x41]  <function_decl 0x7fed223f2f00 dl_color_from_name>) [0 dl_color_from_name S1 A8])
            (const_int 0 [0]))) "test.c":6 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 10 9 0 (set (reg:DI 87 [ _1 ])
        (reg:DI 0 ax)) "test.c":6 -1
     (nil))

;; dl_line (10, 10, 100, 100, _1, 5);

(insn 11 10 12 (set (reg:SI 38 r9)
        (const_int 5 [0x5])) "test.c":6 -1
     (nil))

(insn 12 11 13 (set (reg:DI 37 r8)
        (reg:DI 87 [ _1 ])) "test.c":6 -1
     (nil))

(insn 13 12 14 (set (reg:SI 2 cx)
        (const_int 100 [0x64])) "test.c":6 -1
     (nil))

(insn 14 13 15 (set (reg:SI 1 dx)
        (const_int 100 [0x64])) "test.c":6 -1
     (nil))

(insn 15 14 16 (set (reg:SI 4 si)
        (const_int 10 [0xa])) "test.c":6 -1
     (nil))

(insn 16 15 17 (set (reg:SI 5 di)
        (const_int 10 [0xa])) "test.c":6 -1
     (nil))

(call_insn 17 16 0 (call (mem:QI (symbol_ref:DI ("dl_line") [flags 0x41]  <function_decl 0x7fed22413200 dl_line>) [0 dl_line S1 A8])
        (const_int 0 [0])) "test.c":6 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))

;; _2 = dl_color_from_name ("blue");

(insn 18 17 19 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fed22421240 *.LC2>)) "test.c":8 -1
     (nil))

(call_insn 19 18 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dl_color_from_name") [flags 0x41]  <function_decl 0x7fed223f2f00 dl_color_from_name>) [0 dl_color_from_name S1 A8])
            (const_int 0 [0]))) "test.c":8 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 20 19 0 (set (reg:DI 88 [ _2 ])
        (reg:DI 0 ax)) "test.c":8 -1
     (nil))

;; _3 = (int) _2;

(insn 21 20 0 (set (reg:SI 89 [ _3 ])
        (subreg:SI (reg:DI 88 [ _2 ]) 0)) "test.c":8 -1
     (nil))

;; dl_circle (10, 10, 100, 100, _3, 5);

(insn 22 21 23 (set (reg:SI 38 r9)
        (const_int 5 [0x5])) "test.c":8 -1
     (nil))

(insn 23 22 24 (set (reg:SI 37 r8)
        (reg:SI 89 [ _3 ])) "test.c":8 -1
     (nil))

(insn 24 23 25 (set (reg:DI 2 cx)
        (const_int 100 [0x64])) "test.c":8 -1
     (nil))

(insn 25 24 26 (set (reg:SI 1 dx)
        (const_int 100 [0x64])) "test.c":8 -1
     (nil))

(insn 26 25 27 (set (reg:SI 4 si)
        (const_int 10 [0xa])) "test.c":8 -1
     (nil))

(insn 27 26 28 (set (reg:SI 5 di)
        (const_int 10 [0xa])) "test.c":8 -1
     (nil))

(call_insn 28 27 0 (call (mem:QI (symbol_ref:DI ("dl_circle") [flags 0x41]  <function_decl 0x7fed22413400 dl_circle>) [0 dl_circle S1 A8])
        (const_int 0 [0])) "test.c":8 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))

;; Generating RTL for gimple basic block 3

;; dl_wait (9.99999977648258209228515625e-3);

(insn 30 29 31 (set (reg:SF 21 xmm0)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [2  S4 A32])) "test.c":11 -1
     (expr_list:REG_EQUAL (const_double:SF 9.99999977648258209228515625e-3 [0x0.a3d70ap-6])
        (nil)))

(call_insn 31 30 0 (call (mem:QI (symbol_ref:DI ("dl_wait") [flags 0x41]  <function_decl 0x7fed22413900 dl_wait>) [0 dl_wait S1 A8])
        (const_int 0 [0])) "test.c":11 -1
     (nil)
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
deleting block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DF 91)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [1  S8 A64])) "test.c":4 -1
     (expr_list:REG_EQUAL (const_double:DF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 6 5 7 2 (set (reg:DF 21 xmm0)
        (reg:DF 91)) "test.c":4 -1
     (nil))
(call_insn 7 6 8 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dl_initialize") [flags 0x41]  <function_decl 0x7fed223f2e00 dl_initialize>) [0 dl_initialize S1 A8])
            (const_int 0 [0]))) "test.c":4 -1
     (nil)
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fed224211b0 *.LC1>)) "test.c":6 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dl_color_from_name") [flags 0x41]  <function_decl 0x7fed223f2f00 dl_color_from_name>) [0 dl_color_from_name S1 A8])
            (const_int 0 [0]))) "test.c":6 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg:DI 87 [ _1 ])
        (reg:DI 0 ax)) "test.c":6 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 38 r9)
        (const_int 5 [0x5])) "test.c":6 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 37 r8)
        (reg:DI 87 [ _1 ])) "test.c":6 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 2 cx)
        (const_int 100 [0x64])) "test.c":6 -1
     (nil))
(insn 14 13 15 2 (set (reg:SI 1 dx)
        (const_int 100 [0x64])) "test.c":6 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 4 si)
        (const_int 10 [0xa])) "test.c":6 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) "test.c":6 -1
     (nil))
(call_insn 17 16 18 2 (call (mem:QI (symbol_ref:DI ("dl_line") [flags 0x41]  <function_decl 0x7fed22413200 dl_line>) [0 dl_line S1 A8])
        (const_int 0 [0])) "test.c":6 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fed22421240 *.LC2>)) "test.c":8 -1
     (nil))
(call_insn 19 18 20 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dl_color_from_name") [flags 0x41]  <function_decl 0x7fed223f2f00 dl_color_from_name>) [0 dl_color_from_name S1 A8])
            (const_int 0 [0]))) "test.c":8 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 20 19 21 2 (set (reg:DI 88 [ _2 ])
        (reg:DI 0 ax)) "test.c":8 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 89 [ _3 ])
        (subreg:SI (reg:DI 88 [ _2 ]) 0)) "test.c":8 -1
     (nil))
(insn 22 21 23 2 (set (reg:SI 38 r9)
        (const_int 5 [0x5])) "test.c":8 -1
     (nil))
(insn 23 22 24 2 (set (reg:SI 37 r8)
        (reg:SI 89 [ _3 ])) "test.c":8 -1
     (nil))
(insn 24 23 25 2 (set (reg:DI 2 cx)
        (const_int 100 [0x64])) "test.c":8 -1
     (nil))
(insn 25 24 26 2 (set (reg:SI 1 dx)
        (const_int 100 [0x64])) "test.c":8 -1
     (nil))
(insn 26 25 27 2 (set (reg:SI 4 si)
        (const_int 10 [0xa])) "test.c":8 -1
     (nil))
(insn 27 26 28 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) "test.c":8 -1
     (nil))
(call_insn 28 27 32 2 (call (mem:QI (symbol_ref:DI ("dl_circle") [flags 0x41]  <function_decl 0x7fed22413400 dl_circle>) [0 dl_circle S1 A8])
        (const_int 0 [0])) "test.c":8 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              4 (DFS_BACK)
(code_label 32 28 29 4 2 (nil) [1 uses])
(note 29 32 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg:SF 21 xmm0)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [2  S4 A32])) "test.c":11 -1
     (expr_list:REG_EQUAL (const_double:SF 9.99999977648258209228515625e-3 [0x0.a3d70ap-6])
        (nil)))
(call_insn 31 30 33 4 (call (mem:QI (symbol_ref:DI ("dl_wait") [flags 0x41]  <function_decl 0x7fed22413900 dl_wait>) [0 dl_wait S1 A8])
        (const_int 0 [0])) "test.c":11 -1
     (nil)
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(jump_insn 33 31 34 4 (set (pc)
        (label_ref 32)) "test.c":11 -1
     (nil)
 -> 32)
;;  succ:       4 (DFS_BACK)

(barrier 34 33 0)
